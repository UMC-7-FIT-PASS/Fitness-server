name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      ## 스프링부트 yml 파일 생성
      - name: make application-prod.yml
        run: |
          sudo cd ./src/main/resources
          sudo touch ./application-prod.yml
          sudo echo "${{ secrets.APPLICATION_PROD }}" > ./application-prod.yml

      ## 도커 빌드 후 도커 허브에 push
      - name: docker build and push to docker hub
        run: |
          sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}
          sudo docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }} . 
          sudo docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}

      ## Docker compose로 배포
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOSTNAME }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_KEY }}
          envs: GITHUB_SHA
          script: |
            sudo cd ${{ secrets.DOCKER_COMPOSE_PATH }}
            sudo docker login -u ${{secrets.DOCKER_HUB_USERNAME}} -p ${{secrets.DOCKER_ACCESS_TOKEN}}
            sudo docker pull ${{secrets.DOCKER_HUB_USERNAME}}/${{ secrets.DOCKER_REPOSITORY }}
            sudo docker-compose -f docker-compose.yml up -d